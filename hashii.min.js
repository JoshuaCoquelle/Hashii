!function(f){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=f();else if("function"==typeof define&&define.amd)define([],f);else{var g;g="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,g.Hashii=f()}}(function(){return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a="function"==typeof require&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}for(var i="function"==typeof require&&require,o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){module.exports=function(){function Hashii(options){$scope=this,$scope.options=_override(_defaults(),options),$scope.$element=_returnHashiiDomElement(),$scope.$defaults=_defaults(),$scope.$settings=$scope.options,_validateArguments(arguments[0])}function _defaults(){return{ref:"",format:"[]",includeHash:!1}}function _validateArguments(options){if(options&&"object"!=typeof options)throw new Error("Options argument must be of type object")}function _override(source,options){for(var prop in options)source.hasOwnProperty(prop)&&(source[prop]=options[prop]);return source}function _returnHashiiDomElement(){var element=document.querySelector("[hashii\\:"+$scope.options.ref.toLowerCase()+"]");return _elementMeetsConditions(element)?element:void 0}function _elementMeetsConditions(element){if(null===element)throw new Error("Hashii key is incorrect or does not exist.");if("FORM"!==element.tagName&&"INPUT"!==element.tagName&&"TEXTAREA"!==element.tagName)throw new Error("Hashii selector must be of element type form, input or textarea.");return!0}function _validFieldsArray(element){var collection=_buildFieldsArrayFrom(element),filteredCollection=collection.filter(function(field){return"TEXTAREA"===field.tagName||"INPUT"===field.tagName});return filteredCollection}function _buildFieldsArrayFrom(element){var collection;return collection="FORM"===element.tagName&&element.childElementCount>0?[].slice.call(element.children):[element]}function _parseTagsFrom(field){if(!$scope.options.includeHash){var strippedHashes=field.match(/(?:^|)(?:#)([a-zA-Z\d]+)/g).map(function(tag){return tag.replace("#","")});return strippedHashes}return field.match(/(?:^|)(?:#)([a-zA-Z\d]+)/g)}function _createTagsArrayFrom(collection){var hashtags=[];return collection.filter(function(field){return""!=field.value}).forEach(function(field){hashtags=hashtags.concat(_parseTagsFrom(field.value))}),hashtags}function _convertTagsToJSON(){var hashtagArray=_createTagsArrayFrom(_validFieldsArray($scope.$element)),tags=hashtagArray.reduce(function(obj,value,index){return obj[index]=value,obj},{});return JSON.stringify(tags)}function _returnTags(){var format=$scope.options.format;return format.indexOf("[")>=0?_createTagsArrayFrom(_validFieldsArray($scope.$element)):format.indexOf("{")>=0?_convertTagsToJSON():void 0}var $scope;return Hashii.prototype.$tags=_returnTags,Hashii}},{}]},{},[1])(1)});
